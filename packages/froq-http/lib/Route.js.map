{"version":3,"sources":["../src/Route.js"],"names":["Route","matcher","processer","req","resp","next","result","procResult","processor","Promise","resolve","info","finished","end","placeholderCount"],"mappings":";;;;;;;;AAAA;;;;;;IAIqBA,K;AAEjB,qBAAc;AAAA;;AACV,aAAKC,OAAL,GAAe,IAAf;AACA,aAAKC,SAAL,GAAiB,IAAjB;AACH;;;;;gGAEYC,G,EAAKC,I,EAAMC,I;;;;;;AACdC,sC,GAAS,KAAKL,OAAL,CAAaE,GAAb,C;;sCAEXG,WAAW,K;;;;;;uCACLD,M;;;;;;AAIJE,0C,GAAa,KAAKC,SAAL,CAAeL,GAAf,EAAoBC,IAApB,EAA0BE,MAA1B,C;;uCACbG,QAAQC,OAAR,CAAgBH,UAAhB,C;;;AACN,8CAAII,IAAJ;;AAEA,oCAAI,CAACP,KAAKQ,QAAV,EAAoB;AAChBR,yCAAKS,GAAL;AACH;;;;;;;;;;;;;;;;;;4BAIkB;AACnB,mBAAO,KAAKZ,OAAL,CAAaa,gBAApB;AACH;;;;;;kBA3BgBd,K","file":"Route.js","sourcesContent":["import { log } from 'froq-util';\n\n\n\nexport default class Route {\n\n    constructor() {\n        this.matcher = null;\n        this.processer = null;\n    }\n\n    async handle(req, resp, next) {\n        const result = this.matcher(req);\n        \n        if (result === false) {\n            await next();\n            return;\n        }\n\n        const procResult = this.processor(req, resp, result);\n        await Promise.resolve(procResult);\n        log.info(`route processed`);\n\n        if (!resp.finished) {\n            resp.end();\n        }\n        \n    }\n\n    get placeholderCount() {\n        return this.matcher.placeholderCount;\n    }\n}"]}